#output glsl "150 core"

// gl_Position
uses outPosition

// Vertex inputs.
vertex input vector3 inPosition is Position
vertex input vector4 inColor is Color
vertex input vector3 inNormal is Normal
vertex input vector2 inTexture is Texture

// Common color value. In both vertex and fragment shaders.
common vector4 color
common vector3 normal
common vector2 texCoords
common vector3 fragPos

// Fragment outputs.
fragment output vector4 outColor is 0

uniform vector3 viewPos is ViewPosition

// Vertex shader entrypoint.
vertex entrypoint
    outPosition = new vector4(inPosition.x, inPosition.y, inPosition.z, 1)
    color = inColor
    normal = inNormal
    texCoords = inTexture
    fragPos = inPosition
end

// Fragment shader entrypoint.
fragment entrypoint
    vector3 viewDir = normalize(viewPos - fragPos)
    vector3 norm = normalize(normal)
    if dot(viewDir, norm) < 0
        skip
    end
    outColor = color
end
